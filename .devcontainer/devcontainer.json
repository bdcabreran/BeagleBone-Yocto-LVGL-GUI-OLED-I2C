{
    // Name of your development environment
    "name": "Yocto Project Development",

    "build": {
        "dockerfile": "../Dockerfile", // Path to Dockerfile relative to the .devcontainer folder
        "context": ".." // Docker build context, usually the project root
    },
    
    // Customizations for VSCode settings and recommended extensions
    "customizations": {
        "vscode": {
            // VSCode settings to apply within the dev container
            "settings": {
                "terminal.integrated.defaultProfile.linux": "bash",
                "terminal.integrated.shell.linux": "/bin/bash"
            },
            
            // Recommended VSCode extensions for this project
            "extensions": [
                "aaron-bond.better-comments", // Create more human-friendly comments in your code
                "ms-python.python", // Python support, essential for Yocto's bitbake recipes and classes
                "ms-vscode.cpptools", // C++ tools, useful for any C/C++ development
                "eamodio.gitlens", // Enhanced Git support
                "zixuanwang.linkerscript", // For editing linker scripts, might be handy for embedded development
                "pkief.vscode-material-icon-theme", // vscode-icons, provides rich icons set for Visual Studio Code
                "mhutchie.git-graph", // Visualize your Git repositories in graph format
                "streetsidesoftware.code-spell-checker", // Spell check your code to avoid typos
                "CoenraadS.bracket-pair-colorizer-2", // Colorize matching brackets, enhances code readability
                "jock.svg", // Provides better support and previews for SVG files, useful for documentation or design within projects
                "ms-vscode.cmake-tools", // Helpful for projects that may use CMake as part of their build process
                "marus25.cortex-debug", // Useful for debugging ARM Cortex-M microcontrollers which might be relevant for some Yocto-based projects
                "twxs.cmake", // CMake language support for Visual Studio Code
                "ms-azuretools.vscode-docker", // Docker support for easy management of containers and images, relevant for Yocto development environments
                "vsciot-vscode.vscode-device-tree", // DeviceTree support, essential for working with hardware descriptions in embedded systems
                "gruntfuggly.todo-tree", // Highlights TODOs, FIXMEs, and any keywords, useful for keeping track of tasks within the codebase
                "slevesque.shader", // Shader languages support if you're working with graphical applications within your project
                "yocto-project.yocto-bitbake"
            ]
        }
    },

    // List of ports to forward from the container to the host
    "forwardPorts": [
        8080 // Example port, adjust as necessary for your application
    ],

    // Command to run after creating the container
    "postCreateCommand": "echo 'Environment ready for Yocto Project Development!'",

    // Specifies the user that VSCode should use inside the container
    // Setting remoteUser to "root" allows you to perform any operation inside the container without permission issues. However, for security reasons and to mimic a production-like environment, consider using a non-root user for daily development work.
    "remoteUser": "devuser", 

    // Example devcontainer.json snippet
    "workspaceMount": "source=${localWorkspaceFolder},target=/yocto,type=bind",
    "workspaceFolder": "/yocto"

    // Add runArgs to include device mappings
    // Use it only if you are sure these devices exists otherwise it will generate an error 
    // "runArgs": [
    //     "--device=/dev/ttyUSB0:/dev/ttyUSB0",
    //     "--device=/dev/sda:/dev/sda"
    // ]
}
